98
That is a great idea!
username,17May2021 08:29:10;GREEN
That is a great idea! &lt;p>There used to be folks I worked with who would use the same technique, and it worked great!&lt;/p>
username,17May2021 08:29:10;MAGENTA
That is a great idea! You should use &lt;i> tags for those.
username,17May2021 08:29:10;WHITE
That is a great idea!
username,17May2021 08:29:10;WHITE
That is a great idea!
username,17May2021 08:29:10;BLUE
Test%20Post!
Sig,2022-07-27T19:58:15.795757Z[Etc/UTC];GREEN
test2
Sig22022-07-27T20:04:47.688373Z[Etc/UTC];MAGENTA
Hello%20World!
Test%20Name2022-07-27T20:11:39.437544Z[Etc/UTC];RED
Hello%20World!
Test%20Name2022-07-27T20:12:53.276316Z[Etc/UTC];RED
Great%20article!%20Thanks%20for%20that!
Anonymous2022-07-27T20:14:53.796103Z[Etc/UTC];CYAN
test%20%0A%0Amultiple%20new%20lines%0A%0Ayeah%3F
testing2022-07-27T20:15:38.907522Z[Etc/UTC];CYAN
vdsavdsa%0A%0Avdsavdsa%0Asf%0A%0A%0A%0Avdsavdsa
fdsavdsa2022-07-27T20:17:44.148397Z[Etc/UTC];CYAN
bdsabdsa%20fdsa<br/><br/>vdsavdsa<br/><br/><br/>vdsavdsa
vdsavdsa2022-07-27T20:18:09.917699Z[Etc/UTC];CYAN
%3Cb%3ETest%3C%2Fb%3E
bdsabdsa2022-07-27T20:18:24.565649Z[Etc/UTC];WHITE
%3Cdiv%3ETesting%202%3C%2Fdiv%3E
bdsabdsabdsa2022-07-27T20:18:37.856524Z[Etc/UTC];WHITE
%3Cfont%20color%3D%22red%22%3ETesting3%3C%2Ffont%3E
dsavbsabva2022-07-27T20:18:48.676512Z[Etc/UTC];WHITE
&lt;i%3ETest4&lt;%2Fi%3E
bdsabdasbdsa2022-07-27T20:19:25.201305Z[Etc/UTC];WHITE
sffdsadsavdavdav<br/><br/>Everything%20looks%20good!<br/><br/>I%20am%20happy%20now.
feqfeq2022-07-27T20:26:24.402781Z[Etc/UTC];YELLOW
sfdvdsewfagadavasvdas
abdbsa2022-07-27T20:27:07.342320Z[Etc/UTC];YELLOW
%5E%5ETest%20bold%20text%5E%5E
bfdabda2022-07-28T19:07:53.017136Z[Etc/UTC];GREEN
%5E%5Etest%20bold%20tex%5E%5Et
gda2022-07-28T19:11:24.304502Z[Etc/UTC];GREEN
try%20bolding%20t%5E%5Eext%20in%20the%20midd%5E%5Ele%20of%20the%20box.
bdsabdsa2022-07-28T19:16:31.400155Z[Etc/UTC];GREEN
<b>5E%5Ebold%20text</b>5E%5E
testing%20bold2022-07-28T19:23:11.839033Z[Etc/UTC];GREEN
<b>est</b>
test2022-07-28T19:24:58.411339Z[Etc/UTC];GREEN
<b>est%20bolded%20text</b>
test2022-07-28T19:25:29.514450Z[Etc/UTC];GREEN
<b>bold%20text</b>
fdsa2022-07-28T19:25:51.209453Z[Etc/UTC];GREEN
<i>Italics</i>
2022-07-28T19:26:08.219916Z[Etc/UTC];GREEN
<u>underlinea</u>
2022-07-28T19:26:14.074367Z[Etc/UTC];GREEN
~<pre><span class="keyword">test</span> <span class="keyword">a</span> <span class="keyword">code</span> <span class="variable">block</span></pre>~<br/><br/>
2022-07-28T19:47:56.447910Z[Etc/UTC];GREEN
~<pre><span class="keyword">vdsavdsavdsafdsafdsa</span> <span class="variable">fdsavds</span></pre>~
2022-07-28T19:52:23.484146Z[Etc/UTC];GREEN
<a>test%20a%20link</a>
2022-07-28T19:53:09.504476Z[Etc/UTC];GREEN
<a href=test%20a%20link>test%20a%20link</a>
2022-07-28T19:55:42.857935Z[Etc/UTC];GREEN
<a href="http%3A%2F%2Fgoogle.com">http%3A%2F%2Fgoogle.com</a><br/><br/><a href="Link%20with%20spaces">Link%20with%20spaces</a>
2022-07-28T19:56:20.531467Z[Etc/UTC];GREEN
~<pre><span class="keyword">This</span> <span class="keyword">is</span> <span class="keyword">a</span> <span class="keyword">code</span> <span class="variable">block</span></pre>~<br/><br/>~<pre><span class="keyword">This</span> <span class="keyword">is</span> <span class="keyword">another</span> <span class="keyword">code</span> <span class="variable">block</span>!</pre>~
2022-07-28T19:56:50.050699Z[Etc/UTC];GREEN
%F0%9F%98%8A<i>Italicized</i><b>Bolded</b>%20<b><i>Both</i></b>%20<b><i><u>All%20three</u></i></b>
2022-07-28T19:57:21.107759Z[Etc/UTC];GREEN
%255ETest%255E
2022-07-28T19:58:17.524846Z[Etc/UTC];GREEN
~<pre><span class="keyword">opefully</span> <span class="keyword">this</span> <span class="keyword">code</span> <span class="keyword">block</span> <span class="keyword">has</span> <span class="keyword">no</span> <span class="keyword">extra</span> <span class="class">endings</span>.<span class="variable"></span></pre>~
2022-07-28T20:07:22.711422Z[Etc/UTC];GREEN
~<pre><span class="keyword">I</span> <span class="keyword">think</span> <span class="keyword">the</span> <span class="keyword">front</span> <span class="keyword">one</span> <span class="keyword">is</span> <span class="keyword">still</span> <span class="variable">there</span></pre>~
2022-07-28T20:08:50.191504Z[Etc/UTC];GREEN
<pre><span class="keyword">Code</span> <span class="keyword">block</span> <span class="keyword">now</span> <span class="variable">works</span>!</pre>
2022-07-28T20:13:09.268431Z[Etc/UTC];GREEN
Very%20nice%2C%20thanks%20for%20sharing!
Sig2022-08-01T16:02:59.075004Z[Etc/UTC];GREEN
testest
test2022-08-01T16:05:35.718759Z[Etc/UTC];GREEN
fdasvdsavd
dvsavda2022-08-01T16:05:46.192305Z[Etc/UTC];GREEN
dasvavdsvsda
ewqfewqfeqw2022-08-01T16:05:49.832914Z[Etc/UTC];GREEN

2022-08-01T16:05:56.667292Z[Etc/UTC];GREEN
<b>we%20broke%20it</b>
dvsa2022-08-01T16:06:11.783876Z[Etc/UTC];GREEN
%20%20%20%20
2022-08-01T16:08:10.957080Z[Etc/UTC];GREEN
<b></b>
2022-08-01T16:08:13.443427Z[Etc/UTC];GREEN
fdsavdsavds
dfsafdsa2022-08-01T16:08:18.820345Z[Etc/UTC];GREEN
<b></b><b></b><b></b>
2022-08-01T16:08:24.546240Z[Etc/UTC];GREEN
fdsa
2022-08-01T16:08:28.154518Z[Etc/UTC];GREEN
<pre><span class="keyword">Cool</span> <span class="keyword">stuff</span> <span class="variable">man</span></pre>
2022-08-01T16:08:43.853845Z[Etc/UTC];GREEN
<b>Bold%20Text</b>
vdsavdsa2022-08-01T16:11:13.185418Z[Etc/UTC];GREEN
<pre>//<span class="keyword">Code</span> <span class="keyword">goes</span> <span class="class">here</span>.<span class="variable"></span></pre>
vdsavdsav2022-08-01T16:11:23.726618Z[Etc/UTC];GREEN
<i>Italic%20Text</i>
vdsavdsavdsa2022-08-01T16:11:29.316553Z[Etc/UTC];GREEN
dva<u>avsdv</u>dasv
2022-08-01T16:11:33.383089Z[Etc/UTC];GREEN
<a href="http%3A%2F%2Flink.%F0%9F%98%8Acom">http%3A%2F%2Flink.%F0%9F%98%8Acom</a>
2022-08-01T16:11:42.223754Z[Etc/UTC];GREEN
<pre>//<span class="keyword">Code</span> <span class="variable">go</span>😔<span class="keyword">es</span> <span class="class">here</span>.<span class="variable"></span></pre>
2022-08-01T16:11:57.246254Z[Etc/UTC];GREEN
Thanks%20for%20fixing%20all%20of%20this!<br/><pre><span class="keyword">if</span> <span class="function"></span>(<span class="function">bugsAreGone</span>(<span class="variable"></span>)) {&lt;br/>   <span class="function">printf</span>(<span class="string">"Everyone's happy now!"</span>);&lt;br/>}</pre>
Sig2022-08-03T18:13:00.406708Z[Etc/UTC];GREEN
<pre>&lt;br/><span class="keyword">Manually</span> <span class="keyword">typing</span> <span class="keyword">in</span> <span class="variable">multi</span>-<span class="keyword">line</span> <span class="keyword">code</span> <span class="string">'t work?&lt;br/></pre>
2022-08-03T18:13:34.424600Z[Etc/UTC];GREEN
<pre>//<span class="keyword">Code</span> <span class="keyword">goes</span> <span class="class">here</span>.<span class="variable"></span></pre>
2022-08-03T18:13:54.283725Z[Etc/UTC];GREEN
<pre><span class="keyword">import</span> <span class="class">java</span>.<span class="class">io</span>.<span class="keyword">IOException</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">charset</span>.<span class="keyword">Charset</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">CopyOption</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">Files</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">Path</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">Paths</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">StandardCopyOption</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">StandardOpenOption</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">AbstractMap</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">ArrayList</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">HashMap</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">Iterator</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">List</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">Map</span>;<span class="variable"></span>&lt;br/><span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="class">regex</span>.<span class="keyword">Pattern</span>;<span class="variable"></span></pre>
2022-08-03T18:21:50.961875Z[Etc/UTC];GREEN
<pre>//<span class="keyword">Code</span> <span class="keyword">goes</span> <span class="class">here</span>.<span class="variable"></span></
2022-08-03T18:32:40.406646Z[Etc/UTC];GREEN
<pre>  }\NEWLINE\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isHTMLFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\NEWLINE\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".html"</span>);\NEWLINE\    }\NEWLINE\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ExportCodeFile</span>(<span class="variable"></span>) {\NEWLINE\        <span class="keyword">try</span> <span class="variable"></span>{\NEWLINE\            <span class="keyword">Path</span> <span class="keyword">file</span> <span class="variable"></span>= <span class="class">Paths</span>.<span class="function">get</span>(<span class="string">"sigServer.java"</span>);\NEWLINE\            List&<span class="keyword">lt</span>;String> <span class="keyword">data</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">readAllLines</span>(file);\NEWLINE\            <span class="keyword">int</span> <span class="variable">i</span>=<span class="number">0</span>;\NEWLINE\            <span class="keyword">while</span> <span class="function"></span>(<span class="variable"></span>!<span class="class">data</span>.<span class="function">get</span>(i++).<span class="function">contains</span>(<span class="string">"sigServer()"</span>)&&i&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>());\NEWLINE\            <span class="keyword">if</span> <span class="function"></span>(<span class="variable">i</span>&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>()) {\NEWLINE\                <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,<span class="string">"codeBackground"</span>),<span class="class">data</span>.<span class="function">subList</span>(i, <span class="class">Math</span>.<span class="function">min</span>(i+<span class="number">40</span>,<span class="class">data</span>.<span class="function">size</span>())),<span class="class">Charset</span>.<span class="function">defaultCharset</span>(),<span class="class">StandardOpenOption</span>.CREATE,<span class="class">StandardOpenOption</span>.TRUNCATE_EXISTING,<span class="class">StandardOpenOption</span>.WRITE);\NEWLINE\            }\NEWLINE\        } <span class="keyword">catch</span> <span class="function"></span>(<span class="keyword">IOException</span> <span class="variable">e</span>) {\NEWLINE\            <span class="class">e</span>.<span class="function">printStackTrace</span>();\NEWLINE\        }\NEWLINE\        </
2022-08-03T18:35:46.882477Z[Etc/UTC];GREEN
<pre><span class="keyword">n</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".article"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isHTMLFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".html"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ExportCodeFile</span>(<span class="variable"></span>) {\\NEWLINE\\        <span class="keyword">try</span> <span class="variable"></span>{\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">file</span> <span class="variable"></span>= <span class="class">Paths</span>.<span class="function">get</span>(<span class="string">"sigServer.java"</span>);\\NEWLINE\\            List&<span class="keyword">lt</span>;String> <span class="keyword">data</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">readAllLines</span>(file);\\NEWLINE\\            <span class="keyword">int</span> <span class="variable">i</span>=<span class="number">0</span>;\\NEWLINE\\            <span class="keyword">while</span> <span class="function"></span>(<span class="variable"></span>!<span class="class">data</span>.<span class="function">get</span>(i++).<span class="function">contains</span>(<span class="string">"sigServer()"</span>)&&i&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>());\\NEWLINE\\            <span class="keyword">if</span> <span class="function"></span>(<span class="variable">i</span>&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>()) {\\NEWLINE\\                <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,<span class="string">"codeBackground"</span>),<span class="class">data</span>.<span class="function">subList</span>(i, <span class="class">Math</span>.<span class="function">min</span>(i+<span class="number">40</span>,<span class="class">data</span>.<span class="function">size</span>())),<span class="class">Charset</span>.<span class="function">defaultCharset</span>(),<span class="class">StandardOpenOption</span>.CREATE,<span class="class">StandardOpenOption</span>.TRUNCATE_EXISTING,<span class="class">StandardOpenOption</span>.WRITE);\\NEWLINE\\            }\\NEWLINE\\        } <span class="keyword">catch</span> <span class="function"></span>(<span class="keyword">IOException</span> <span class="variable">e</span>) {\\NEWLINE\\            <span class="class">e</span>.<span class="function">printStackTrace</span>();\\NEWLINE\\        }\\NEWLINE\\        \\NEWLINE\\    }</
2022-08-03T18:37:10.677390Z[Etc/UTC];GREEN
And%20\\NEWLINE\\does%20this\\NEWLINE\\\\NEWLINE\\<b>still%20work%3F</b>
2022-08-03T18:39:39.225735Z[Etc/UTC];GREEN
test%0A%0A1%20%0A<u>%0A2%0A%0A3</u>
2022-08-03T18:40:47.061604Z[Etc/UTC];GREEN
<pre>}\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isHTMLFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".html"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ExportCodeFile</span>(<span class="variable"></span>) {\\NEWLINE\\        <span class="keyword">try</span> <span class="variable"></span>{\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">file</span> <span class="variable"></span>= <span class="class">Paths</span>.<span class="function">get</span>(<span class="string">"si</pre
2022-08-03T18:40:56.697256Z[Etc/UTC];GREEN
Nice%2C%20looks%20good%20now.%0A%0AHooray!
2022-08-03T18:43:19.328126Z[Etc/UTC];GREEN
<pre>//<span class="keyword">Code</span> <span class="keyword">goes</span> <span class="class">here</span>.<span class="variable"></span></%0A%0ABut%20this%20code%20block%20is%20better%3A%0A%0A<pre>             .<span class="function">append</span>(<span class="class">Files</span>.<span class="function">getOwner</span>(f))\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"\t"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="class">Files</span>.<span class="function">size</span>(f))\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"&lt;/div>\n"</span>);\\NEWLINE\\            }\\NEWLINE\\            <span class="keyword">for</span> <span class="function"></span>(<span class="keyword">String</span> <span class="keyword">d</span> <span class="variable"></span>: data2) {\\NEWLINE\\                <span class="keyword">for</span> <span class="function"></span>(<span class="keyword">String</span> <span class="keyword">k</span> <span class="variable"></span>: <span class="class">sigPlace</span>.<span class="class">map</span>.<span class="function">keySet</span>()) {\\NEWLINE\\                    d=<span class="class">d</span>.<span class="function">replaceAll</span>(<span class="class">Pattern</span>.<span class="function">quote</span>(k),<span class="class">sigPlace</span>.<span class="class">map</span>.<span class="function">get</span>(k));\\NEWLINE\\                }\\NEWLINE\\                <span class="class">sb</span>.<span class="function">append</span>(d).<span class="function">append</span>(<span class="string">"\n"</span>);\\NEWLINE\\            }\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">newf</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,key,DIRECTORYLISTING_FILENAME),<span class="class">sb</span>.<span class="function">toString</span>().<span class="function">getBytes</span>());\\NEWLINE\\            <span class="class">System</span>.<span class="class">out</span>.<span class="function">println</span>(<span class="string">"  Added info for ("</span>+<span class="class">map</span>.<span class="function">size</span>()+<span class="string">") files to "</span>+<span class="class">newf</span>.<span class="function">toAbsolutePath</span>());\\NEWLINE\\        }\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isArticleFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".article"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isHTMLFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".html"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ExportCodeFile</span>(<span class="variable"></span>) {\\NEWLINE\\        <span class="keyword">try</span> <span class="variable"></span>{</
2022-08-03T18:43:38.560701Z[Etc/UTC];GREEN
<pre><span class="keyword">ort</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">AbstractMap</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">ArrayList</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">HashMap</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">Iterator</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">List</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">Map</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="class">regex</span>.<span class="keyword">Pattern</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">public</span> <span class="keyword">class</span> <span class="keyword">sigPlace</span> </pre>
2022-08-03T18:49:58.367173Z[Etc/UTC];GREEN
<pre>//<span class="keyword">Code</span> <span class="keyword">goes</span> </pre>%0A%0ABut%20this%20is%20better%3A%0A%0A<pre> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">Path</span>;\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">Paths</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">StandardCopyOption</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">nio</span>.<span class="class">file</span>.<span class="keyword">StandardOpenOption</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">AbstractMap</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">ArrayList</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.<span class="keyword">HashMap</span>;<span class="variable"></span>\\NEWLINE\\<span class="keyword">import</span> <span class="class">java</span>.<span class="class">util</span>.</pre>
2022-08-03T18:50:34.311757Z[Etc/UTC];GREEN
<b>testomg</b>%0A%0Amultiple%0A%0Alines%20<u>make%20sure</u>%20it%20works%0A%0A%F0%9F%98%8A
2022-08-03T18:50:53.534777Z[Etc/UTC];GREEN
Awesomeness
2022-08-03T18:51:18.626238Z[Etc/UTC];BLUE
HOME%0ABLOG%0AARCADE%0ASTREAM%0A%F0%9F%94%B4%20LIVE%0ACODING%20SERVICES%0ADISCORD%0AGITHUB
2022-08-03T18:55:16.129190Z[Etc/UTC];GREEN
fdsa
2022-08-03T18:55:29.796811Z[Etc/UTC];WHITE
dsavsavdsavdsa%0A%0A%0Aefwqfewqfewq%20%F0%9F%91%8D
2022-08-03T18:57:35.135137Z[Etc/UTC];GREEN
well%20crud
2022-08-03T19:03:01.781701Z[Etc/UTC];GREEN
when%20there%20are%20too%20many%20comments%20it%20no%20longer%20works
2022-08-03T19:03:27.628422Z[Etc/UTC];GREEN
<pre>            }\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">newf</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,key,DIRECTORYLISTING_FILENAME),<span class="class">sb</span>.<span class="function">toString</span>().<span class="function">getBytes</span>());\\NEWLINE\\            <span class="class">System</span>.<span class="class">out</span>.<span class="function">println</span>(<span class="string">"  Added info for ("</span>+<span class="class">map</span>.<span class="function">size</span>()+<span class="string">") files to "</span>+<span class="class">newf</span>.<span class="function">toAbsolutePath</span>());\\NEWLINE\\        }\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isArticleFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".article"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isHTMLFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".html"</span>);\\NEWLINE\\    }\\NEWLINE\</pre>
2022-08-03T19:03:48.750287Z[Etc/UTC];GREEN
requestParams.get(%22message%22)
2022-08-03T19:05:00.093558Z[Etc/UTC];GREEN
%20%20%20%20%20%20%20%20%20%20%20%20Path%20file%20%3D%20Paths.get(%22sigServer.java%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20List&lt;String%3E%20data%20%3D%20Files.readAllLines(file)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20int%20i%3D0%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20while%20(!data.get(i%2B%2B).contains(%22sigServer()%22)%26%26i&lt;data.size())%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(i&lt;data.size())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Files.write(Paths.get(OUTDIR%2C%22codeBackground%22)%2Cdata.subList(i%2C%20Math.min(i%2B40%2Cdata.size()))%2CCharset.defaultCharset()%2CStandardOpenOption.CREATE%2CStandardOpenOption.TRUNCATE_EXISTING%2CStandardOpenOption.WRITE)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%20catch%20(IOException%20e)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20e.printStackTrace()%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20
2022-08-03T19:05:02.172964Z[Etc/UTC];GREEN
<pre>            <span class="keyword">Path</span> <span class="keyword">file</span> <span class="variable"></span>= <span class="class">Paths</span>.<span class="function">get</span>(<span class="string">"sigServer.java"</span>);\\NEWLINE\\            List&<span class="keyword">lt</span>;String> <span class="keyword">data</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">readAllLines</span>(file);\\NEWLINE\\            <span class="keyword">int</span> <span class="variable">i</span>=<span class="number">0</span>;\\NEWLINE\\            <span class="keyword">while</span> <span class="function"></span>(<span class="variable"></span>!<span class="class">data</span>.<span class="function">get</span>(i++).<span class="function">contains</span>(<span class="string">"sigServer()"</span>)&&i&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>());\\NEWLINE\\            <span class="keyword">if</span> <span class="function"></span>(<span class="variable">i</span>&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>()) {\\NEWLINE\\                <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,<span class="string">"codeBackground"</span>),<span class="class">data</span>.<span class="function">subList</span>(i, <span class="class">Math</span>.<span class="function">min</span>(i+<span class="number">40</span>,<span class="class">data</span>.<span class="function">size</span>())),<span class="class">Charset</span>.<span class="function">defaultCharset</span>(),<span class="class">StandardOpenOption</span>.CREATE,<span class="class">StandardOpenOption</span>.TRUNCATE_EXISTING,<span class="class">StandardOpenOption</span>.WRITE);\\NEWLINE\\            }\\NEWLINE\\        } <span class="keyword">catch</span> <span class="function"></span>(<span class="keyword">IOException</span> <span class="variable">e</span>) {\\NEWLINE\\            <span class="class">e</span>.<span class="function">printStackTrace</span>();\\NEWLINE\\        }\\NEWLINE\\       </pre>
2022-08-03T19:05:08.199796Z[Etc/UTC];GREEN
<pre>\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isHTMLFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".html"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ExportCodeFile</span>(<span class="variable"></span>) {\\NEWLINE\\        <span class="keyword">try</span> <span class="variable"></span>{\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">file</span> <span class="variable"></span>= <span class="class">Paths</span>.<span class="function">get</span>(<span class="string">"sigServer.java"</span>);\\NEWLINE\\            List&<span class="keyword">lt</span>;String> <span class="keyword">data</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">readAllLines</span>(file);\\NEWLINE\\            <span class="keyword">int</span> <span class="variable">i</span>=<span class="number">0</span>;\\NEWLINE\\            <span class="keyword">while</span> <span class="function"></span>(<span class="variable"></span>!<span class="class">data</span>.<span class="function">get</span>(i++).<span class="function">contains</span>(<span class="string">"sigServer()"</span>)&&i&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>());\\NEWLINE\\            <span class="keyword">if</span> <span class="function"></span>(<span class="variable">i</span>&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>()) {\\NEWLINE\\                <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,<span class="string">"codeBackgroun</pre>
2022-08-03T19:05:28.091289Z[Etc/UTC];GREEN
<pre>                <span class="keyword">if</span> <span class="function"></span>(<span class="class">Files</span>.<span class="function">isDirectory</span>(<span class="variable">destination</span>)) {\\NEWLINE\\                    <span class="class">Files</span>.<span class="function">createDirectories</span>(destination);\\NEWLINE\\                } <span class="keyword">else</span> <span class="variable"></span>{\\NEWLINE\\                    <span class="class">Files</span>.<span class="function">copy</span>(source, destination, <span class="keyword">new</span> <span class="variable">CopyOption</span>[]{<span class="class">StandardCopyOption</span>.COPY_ATTRIBUTES,<span class="class">StandardCopyOption</span>.REPLACE_EXISTING});\\NEWLINE\\                }\\NEWLINE\\            } <span class="keyword">catch</span> <span class="function"></span>(<span class="keyword">IOException</span> <span class="variable">e</span>) {\\NEWLINE\\  \\NEWLINE\\            <span class="class">sb</span>.<span class="function">append</span>(<span class="string">"&lt;div c\\NEWLINE\\3 May 2022 10:25A</pre>
2022-08-03T19:06:54.198108Z[Etc/UTC];GREEN
<pre>                <span class="keyword">String</span> <span class="keyword">myKey</span> <span class="variable"></span>= <span class="class">f</span>.<span class="function">toAbsolutePath</span>().<span class="function">toString</span>().<span class="function">replace</span>(startingPath,<span class="string">""</span>).<span class="function">replace</span>(<span class="class">f</span>.<span class="function">getFileName</span>().<span class="function">toString</span>(),<span class="string">""</span>);\\NEWLINE\\                </pre>
2022-08-03T19:11:01.168522Z[Etc/UTC];GREEN
<pre>         List&<span class="keyword">lt</span>;String> <span class="keyword">data</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">readAllLines</span>(file);\\NEWLINE\\            <span class="keyword">int</span> <span class="variable">i</span>=<span class="number">0</span>;\\NEWLINE\\            <span class="keyword">while</span> <span class="function"></span>(<span class="variable"></span>!<span class="class">data</span>.<span class="function">get</span>(i++).<span class="function">contains</span>(<span class="string">"sigServer()"</span>)&&i&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>());\\NEWLINE\\            <span class="keyword">if</span> <span class="function"></span>(<span class="variable">i</span>&<span class="keyword">lt</span>;<span class="class">data</span>.<span class="function">size</span>()) {\\NEWLINE\\                <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.</pre>
2022-08-03T19:13:44.478200Z[Etc/UTC];GREEN
<pre>            }\\NEWLINE\\            <span class="keyword">for</span> <span class="function"></span>(<span class="keyword">String</span> <span class="keyword">d</span> <span class="variable"></span>: data2) {\\NEWLINE\\                <span class="keyword">for</span> <span class="function"></span>(<span class="keyword">String</span> <span class="keyword">k</span> <span class="variable"></span>: <span class="class">sigPlace</span>.<span class="class">map</span>.<span class="function">keySet</span>()) {\\NEWLINE\\                    d=<span class="class">d</span>.<span class="function">replaceAll</span>(<span class="class">Pattern</span>.<span class="function">quote</span>(k),<span class="class">sigPlace</span>.<span class="class">map</span>.<span class="function">get</span>(k));\\NEWLINE\\                }\\NEWLINE\\                <span class="class">sb</span>.<span class="function">append</span>(d).<span class="function">append</span>(<span class="string">"\n"</span>);\\NEWLINE\\            }\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">newf</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,key,DIRECTORYLISTING_FILENAME),<span class="class">sb</span>.<span class="function">toString</span>().<span class="function">getBytes</span>());\\NEWLINE\\            <span class="class">System</span>.<span class="class">out</span>.<span class="function">println</span>(<span class="string">"  Added info for ("</span>+<span class="class">map</span>.<span class="function">size</span>()+<span class="string">") files to "</span>+<span class="class">newf</span>.<span class="function">toAbsolutePath</span>());\\NEWLINE\\        }\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isArticleFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".article"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="function">isHTMLFile</span>(<span class="keyword">Path</span> <span class="variable">f</span>) {\\NEWLINE\\        <span class="keyword">return</span> <span class="class">f</span>.<span class="function">getFileName</span>(<span class="variable"></span>).<span class="function">toString</span>().<span class="function">contains</span>(<span class="string">".html"</span>);\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ExportCodeFile</span>(<span class="variable"></span>) </pre>
2022-08-03T19:14:37.888355Z[Etc/UTC];GREEN
<teskgldjaskgldsa
2022-08-03T19:16:51.237755Z[Etc/UTC];GREEN
&lt;test
2022-08-03T19:18:17.262178Z[Etc/UTC];GREEN
<pre>            <span class="keyword">Path</span> <span class="keyword">file</span> <span class="variable"></span>= <span class="class">Paths</span>.<span class="function">get</span>(<span class="string">"sigServer.java"</span>);\\NEWLINE\\            List&lt;String> <span class="keyword">data</span> <span class="variable"></span>= <span class="class">Files</span>.<span class="function">readAllLines</span>(file);\\NEWLINE\\            <span class="keyword">int</span> <span class="variable">i</span>=<span class="number">0</span>;\\NEWLINE\\            <span class="keyword">while</span> <span class="function"></span>(<span class="variable"></span>!<span class="class">data</span>.<span class="function">get</span>(i++).<span class="function">contains</span>(<span class="string">"sigServer()"</span>)&&i&lt;<span class="class">data</span>.<span class="function">size</span>());\\NEWLINE\\            <span class="keyword">if</span> <span class="function"></span>(<span class="variable">i</span>&lt;<span class="class">data</span>.<span class="function">size</span>()) {\\NEWLINE\\                <span class="class">Files</span>.<span class="function">write</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR,<span class="string">"codeBackground"</span>),<span class="class">data</span>.<span class="function">subList</span>(i, <span class="class">Math</span>.<span class="function">min</span>(i+<span class="number">40</span>,<span class="class">data</span>.<span class="function">size</span>())),<span class="class">Charset</span>.<span class="function">defaultCharset</span>(),<span class="class">StandardOpenOption</span>.CREATE,<span class="class">StandardOpenOption</span>.TRUNCATE_EXISTING,<span class="class">StandardOpenOption</span>.WRITE);\\NEWLINE\\            }\\NEWLINE\\        } <span class="keyword">catch</span> <span class="function"></span>(<span class="keyword">IOException</span> <span class="variable">e</span>) {\\NEWLINE\\            <span class="class">e</span>.<span class="function">printStackTrace</span>()</pre>
2022-08-03T19:18:32.814373Z[Etc/UTC];GREEN
<pre>            }\\NEWLINE\\            <span class="class">sb</span>.<span class="function">append</span>(<span class="string">"&lt;h2>Directory Listing for "</span>+key+<span class="string">"&lt;/h2>"</span>);\\NEWLINE\\            <span class="class">sb</span>.<span class="function">append</span>(<span class="string">"&lt;div class=\"folderlisting\">&lt;a href=\""</span>)\\NEWLINE\\            .<span class="function">append</span>(key)\\NEWLINE\\            .<span class="function">append</span>(<span class="string">"..\" class=\"icon\">📁&lt;/a>&lt;a href=\""</span>)\\NEWLINE\\            .<span class="function">append</span>(key)\\NEWLINE\\            .<span class="function">append</span>(<span class="string">"..\">.. &lt;/a>&lt;a href=\""</span>)\\NEWLINE\\            .<span class="function">append</span>(key)\\NEWLINE\\            .<span class="function">append</span>(<span class="string">"..\" class=\"nounderline\">(Previous Directory)&lt;/a>&lt;/div>"</span>);\\NEWLINE\\            <span class="keyword">for</span> <span class="function"></span>(<span class="keyword">Path</span> <span class="keyword">f</span> <span class="variable"></span>: <span class="class">map</span>.<span class="function">get</span>(key)) {\\NEWLINE\\                <span class="class">sb</span>.<span class="function">append</span>(<span class="string">"&lt;div class=\""</span>).<span class="function">append</span>(<span class="function"></span>(<span class="class">Files</span>.<span class="function">isDirectory</span>(f)?<span class="string">"folderlisting"</span>:<span class="string">"filelisting"</span>)).<span class="function">append</span>(<span class="string">"\">"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"&lt;a href=\""</span>+<span class="function"></span>(<span class="class">f</span>.<span class="function">toAbsolutePath</span>().<span class="function">toString</span>().<span class="function">replace</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR).<span class="function">toAbsolutePath</span>().<span class="function">toString</span>(),<span class="string">""</span>))+<span class="string">"\" class=\"icon\">"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="function"></span>(<span class="class">Files</span>.<span class="function">isDirectory</span>(f)?<span class="string">"📁"</span>:<span class="string">"🗎"</span>))\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"&lt;/a>"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"&lt;a href=\""</span>+<span class="function"></span>(<span class="class">f</span>.<span class="function">toAbsolutePath</span>().<span class="function">toString</span>().<span class="function">replace</span>(<span class="class">Paths</span>.<span class="function">get</span>(OUTDIR).<span class="function">toAbsolutePath</span>().<span class="function">toString</span>(),<span class="string">""</span>))+<span class="string">"\">"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="class">f</span>.<span class="function">getFileName</span>())\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"&lt;/a>\t"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="class">Files</span>.<span class="function">getLastModifiedTime</span>(f))\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"\t"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="class">Files</span>.<span class="function">getOwner</span>(f))\\NEWLINE\\                .<span class="function">append</span>(<span class="string">"\t"</span>)\\NEWLINE\\                .<span class="function">append</span>(<span class="class">Files</span>.<span class="function">size</span>(f)</pre>
2022-08-03T19:18:48.686982Z[Etc/UTC];GREEN
<pre>                }\\NEWLINE\\            } <span class="keyword">catch</span> <span class="function"></span>(<span class="keyword">IOException</span> <span class="variable">e</span>) {\\NEWLINE\\                <span class="class">e</span>.<span class="function">printStackTrace</span>();\\NEWLINE\\            }\\NEWLINE\\        }\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ConvertArticleReferences</span>(<span class="variable">Iterator</span>&lt;Path> items) {\\NEWLINE\\        <span class="keyword">while</span> <span class="function"></span>(<span class="class">items</span>.<span class="function">hasNext</span>(<span class="variable"></span>)) {\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">f</span> <span class="variable"></span>= <span class="class">items</span>.<span class="function">next</span>();\\NEWLINE\\            <span class="class">System</span>.<span class="class">out</span>.<span class="function">println</span>(<span class="string">" Looking for Article References..."</span>+<span class="class">f</span>.<span class="function">getFileName</span>());\\NEWLINE\\            <span class="keyword">boolean</span> <span class="variable">articleJavascriptIncluded</span>=<span class="number">false</span><span class="keyword"></span>;\\NEWLINE\\            <span class="keyword">if</span> <span class="function"></span>(<span class="class">Files</span>.<span class="function">isRegularFile</span>(<span class="variable">f</span>)&&<span class="function">isHTMLFile</span>(f)) {                }\\NEWLINE\\            } <span class="keyword">catch</span> <span class="function"></span>(<span class="keyword">IOException</span> <span class="variable">e</span>) {\\NEWLINE\\                <span class="class">e</span>.<span class="function">printStackTrace</span>();\\NEWLINE\\            }\\NEWLINE\\        }\\NEWLINE\\    }\\NEWLINE\\    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="function">ConvertArticleReferences</span>(<span class="variable">Iterator</span>&lt;Path> items) {\\NEWLINE\\        <span class="keyword">while</span> <span class="function"></span>(<span class="class">items</span>.<span class="function">hasNext</span>(<span class="variable"></span>)) {\\NEWLINE\\            <span class="keyword">Path</span> <span class="keyword">f</span> <span class="variable"></span>= <span class="class">items</span>.<span class="function">next</span>();\\NEWLINE\\            <span class="class">System</span>.<span class="class">out</span>.<span class="function">println</span>(<span class="string">" Looking for Article References..."</span>+<span class="class">f</span>.<span class="function">getFileName</span>());\\NEWLINE\\            <span class="keyword">boolean</span> <span class="variable">articleJavascriptIncluded</span>=<span class="number">false</span><span class="keyword"></span>;\\NEWLINE\\            <span class="keyword">if</span> <span class="function"></span>(<span class="class">Files</span>.<span class="function">isRegularFile</span>(<span class="variable">f</span>)&&<span class="function">isHTMLFile</span>(f)) </pre>
2022-08-03T19:20:13.015061Z[Etc/UTC];GREEN
gna%2C%20sit%20amet%20finibus%20eros.%20In%20a%20nibh%20tincidunt%2C%20suscipit%20tellus%20eleifend%2C%20faucibus%20mauris.%20Vestibulum%20sagittis%20nisi%20et%20efficitur%20ullamcorper.%20Donec%20sodales%20efficitur%20ligula%20id%20congue.%20Etiam%20egestas%20tristique%20interdum.%20Mauris%20at%20massa%20eget%20metus%20pellentesque%20fermentum%20nec%20non%20lacus.%20Nulla%20turpis%20nunc%2C%20feugiat%20vel%20euismod%20ac%2C%20maximus%20id%20est.%20Praesent%20cursus%20elit%20ac%20dolor%20hendrerit%20lacinia.
2022-08-03T19:21:27.262008Z[Etc/UTC];GREEN
aucibus.%20Sed%20ac%20diam%20non%20lectus%20euismod%20pulvinar%20eu%20non%20mauris.%20Donec%20accumsan%20nisl%20efficitur%2C%20sodales%20lectus%20et%2C%20finibus%20quam.%20Sed%20vel%20consectetur%20leo.%20Cras%20ut%20condimentum%20quam.%20Aliquam%20molestie%20viverra%20congue.%20Donec%20scelerisque%20nibh%20ac%20nulla%20dictum%20semper.%20Aliquam%20id%20massa%20a%20massa%20bibendum%20finibus%20id%20ac%20sapien.%20Integer%20vitae%20ullamcorper%20enim%2C%20non%20semper%20massa.%0A%0A%0AProin%20cursus%20sodales%20elit%2C%20vitae%20volutpat%20mi%20fermentum%20a.%20In%20vitae%20magna%20quis%20leo%20cursus%20accumsan%20id%20facilisis%20purus.%20Vestibulum%20accumsan%20iaculis%20turpis%20eu%20sollicitudin.%20Sed%20ultricies%20felis%20non%20elit%20suscipit%20interdum.%20Maecenas%20sollicitudin%20turpis%20justo%2C%20vel%20pretium%20sapien%20scelerisque%20eget.%20Nullam%20sagittis%20finibus%20risus%20ut%20aliquam.%20Praesent%20quam%20orci%2C%20dapibus%20ut%20ex%20ac%2C%20sodales%20dapibus%20nunc.%0A%0A%0AFusce%20magna%20risus%2C%20iaculis%20non%20justo%20sit%20amet%2C%20semper%20sodales%20urna.%20Morbi%20eu%20eros%20lectus.%20Integer%20euismod%20venenatis%20eros%20a%20hendrerit.%20Nulla%20ultricies%20lectus%20nec%20quam%20condimentum%20fermentum.%20Quisque%20a%20turpis%20vitae%20orci%20pharetra%20ullamcorper.%20Nunc%20fringilla%20vitae%20nunc%20a%20aliquam.%20In%20aliquam%20gravida%20massa.%20Sed%20imperdiet%20dignissim%20sapien%2C%20ullamcorper%20rutrum%20lacus%20convallis%20ut.%0A%E2%9D%A4%EF%B8%8F%E2%9D%A4%EF%B8%8F%E2%9D%A4%EF%B8%8F
2022-08-03T19:22:26.325326Z[Etc/UTC];GREEN
